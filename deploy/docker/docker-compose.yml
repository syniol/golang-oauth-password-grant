version: "3"
services:
  proxy:
    image: xyo-api-proxy:latest
    build:
      context: ../..
      dockerfile: deploy/docker/nginx/Dockerfile
    container_name: oauth_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: curl -k -s -o /dev/null -w "%{http_code}" https://proxy/healthz | grep 200 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - oauth_gateway

  app:
    image: oauth_golang:1.18
    build:
      context: ../..
      dockerfile: deploy/docker/golang/Dockerfile
    container_name: oauth_app
    restart: unless-stopped
    depends_on:
      - database
      - cache
    environment:
      POSTGRES_USER: oauth_usr
      POSTGRES_PASSWORD: DummyPassword1
      POSTGRES_DB: oauth
      REDIS_TLS_CERT_FILE: /usr/local/etc/redis/tls/redis.crt
      REDIS_TLS_KEY_FILE: /usr/local/etc/redis/tls/redis.key
      REDIS_TLS_CA_FILE: /usr/local/etc/redis/tls/ca.crt
    volumes:
      - redis_tls:/usr/local/etc/redis/tls
    networks:
      - oauth_gateway
      - oauth_authentication

  database:
    image: oauth_postgres:14
    build:
      context: ../..
      dockerfile: deploy/docker/postgres/Dockerfile
    container_name: oauth_db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: DummyPassword1
      POSTGRES_USER: oauth_usr
      POSTGRES_DB: oauth
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - oauth_authentication

  cache:
    image: oauth_redis:6
    build:
      context: ../..
      dockerfile: deploy/docker/redis/Dockerfile
    container_name: oauth_cache
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli --tls --cert $${REDIS_TLS_CERT_FILE} --key $${REDIS_TLS_KEY_FILE} --cacert $${REDIS_TLS_CA_FILE} --insecure PING | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - cache_data:/data
      - redis_tls:/usr/local/etc/redis/tls
    networks:
      - oauth_authentication

volumes:
  database_data:
  cache_data:
  redis_tls:

networks:
  oauth_gateway:
    driver: bridge
  oauth_authentication:
    driver: bridge
