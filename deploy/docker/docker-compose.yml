services:
  proxy:
    image: oauth_nginx:1.22
    build:
      context: ../..
      dockerfile: deploy/docker/nginx/Dockerfile
    container_name: oauth_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: curl -k -s -o /dev/null -w "%{http_code}" https://proxy/healthz | grep 200 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - oauth_authentication_net

  app:
    image: oauth_golang:1.18
    build:
      context: ../..
      dockerfile: deploy/docker/golang/Dockerfile
    container_name: oauth_app
    restart: unless-stopped
    depends_on:
      - database
      - cache
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_TLS_CERT_FILE: ${REDIS_TLS_CERT_FILE}
      REDIS_TLS_KEY_FILE: ${REDIS_TLS_KEY_FILE}
      REDIS_TLS_CA_FILE: ${REDIS_TLS_CA_FILE}
    networks:
      - oauth_authentication_net

  database:
    image: oauth_postgres:14
    build:
      context: ../..
      dockerfile: deploy/docker/postgres/Dockerfile
    container_name: oauth_db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - oauth_authentication_net

  cache:
    image: oauth_redis:6
    build:
      context: ../..
      dockerfile: deploy/docker/redis/Dockerfile
    container_name: oauth_cache
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli --tls --cert $${REDIS_TLS_CERT_FILE} --key $${REDIS_TLS_KEY_FILE} --cacert $${REDIS_TLS_CA_FILE} --insecure PING | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - cache_data:/data
    networks:
      - oauth_authentication_net

volumes:
  database_data:
    name: oauth_database_data
  cache_data:
    name: oauth_cache_data

networks:
  oauth_authentication_net:
